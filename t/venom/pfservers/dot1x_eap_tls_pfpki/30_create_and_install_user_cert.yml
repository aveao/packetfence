name: Create and install user certificate
version: 2
testcases:
- name: create_user_cert
  steps:
  - type: http
    method: POST
    url: '{{.pfserver_webadmin_url}}/api/v1/pki/certs'
    ignore_verify_ssl: true
    body: >-
      {
        "profile_id": "2",
        "cn": "{{.dot1x_eap_tls_pfpki.certs.user.cn}}",
        "mail": "UserCertificate@inverse.ca",
        "organisation": "Inverse",
        "country": "CA",
        "state": "Quebec",
        "locality": "Montreal",
        "street_address": "7000 park avenue",
        "postal_code": "H3N 1X1"
      }
    headers:
      "Authorization": "{{.pfserver_token}}"
      "Content-Type": "application/json"
    assertions:
      - result.statuscode ShouldEqual 200
    vars:
      serial_number:
        from: result.bodyjson.items.items0.id

- name: create_temp_directory
  steps:
    - type: exec
      script: "mktemp -d"
      vars:
        temp_dir:
          from: result.systemout

- name: download_p12_file
  steps:
  - type: exec
    script: "curl -k --output {{.create_temp_directory.temp_dir}}/{{.dot1x_eap_tls_pfpki.certs.user.cn}}.p12 http://127.0.0.1:22225/api/v1/pki/cert/{{.create_user_cert.serial_number}}/download/secret"

- name: extract_certificates
  steps:
  - type: exec
    script: "openssl pkcs12 -in {{.create_temp_directory.temp_dir}}/{{.dot1x_eap_tls_pfpki.certs.user.cn}}.p12 -nokeys -out {{.create_temp_directory.temp_dir}}/{{.dot1x_eap_tls_pfpki.certs.user.cn}}.crt -passin pass:secret"

- name: extract_private_key
  steps:
  - type: exec
    script: "openssl pkcs12 -in {{.create_temp_directory.temp_dir}}/{{.dot1x_eap_tls_pfpki.certs.user.cn}}.p12 -nocerts -nodes -out {{.create_temp_directory.temp_dir}}/{{.dot1x_eap_tls_pfpki.certs.user.cn}}.key -passin pass:secret"
